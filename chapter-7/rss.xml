<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><author/><title>فصل هفتم: تست نویسی on زبان گو فارسی</title><link>https://book.gofarsi.ir/chapter-7/</link><description>Recent content in فصل هفتم: تست نویسی on زبان گو فارسی</description><generator>Hugo -- gohugo.io</generator><language>fa</language><copyright>2023 GoFarsi All rights reserved</copyright><atom:link href="https://book.gofarsi.ir/chapter-7/rss.xml" rel="self" type="application/rss+xml"/><item><author/><title>7.1 مقدمه‌ای بر تست در Go</title><link>https://book.gofarsi.ir/chapter-7/go-introduction-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-introduction-testing/</guid><description>&lt;p>تست‌نویسی یکی از ارکان حیاتی توسعه نرم‌افزارهای قابل‌اعتماد و نگهدارپذیر است. در دنیای امروز که سرعت توسعه و تغییرات کد روزبه‌روز بیشتر می‌شود، وجود تست‌های دقیق و ساختاریافته تضمین می‌کند که عملکرد نرم‌افزار با تغییرات جدید دچار اختلال نشود. از کشف باگ‌ها گرفته تا مستندسازی رفتار مورد انتظار ماژول‌ها، تست‌ها نقشی فراتر از صرفاً اطمینان‌بخشی دارند. آن‌ها به تیم توسعه جرئت ریفکتور می‌دهند و مرزهای طراحی سیستم را شفاف می‌کنند.&lt;/p></description></item><item><author/><title>7.2 تست واحد (Unit Test)</title><link>https://book.gofarsi.ir/chapter-7/go-unit-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-unit-testing/</guid><description>&lt;p>تست واحد یکی از مهم‌ترین و بنیادی‌ترین ابزارهایی‌ست که یک توسعه‌دهنده حرفه‌ای در اختیار دارد. این نوع تست، تنها بر یک «واحد» مستقل از منطق برنامه تمرکز می‌کند—معمولاً یک تابع، یک متد، یا یک ساختار کوچک از کد که بدون وابستگی به منابع خارجی قابل بررسی است. هدف اصلی از نوشتن تست واحد، اطمینان از صحت رفتار دقیق و قابل پیش‌بینی کد در مواجهه با ورودی‌های مشخص و شرایط کنترل‌شده است.&lt;/p></description></item><item><author/><title>7.3 تست جدول‌محور (Table-Driven Test)</title><link>https://book.gofarsi.ir/chapter-7/go-table-driven-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-table-driven-tests/</guid><description>&lt;p>در زبان Go، یکی از الگوهای محبوب و بسیار قدرتمند برای نوشتن تست‌های واحد و رفتاری، الگوی «تست جدول‌محور» است. این سبک از تست‌نویسی نه‌تنها منجر به حذف تکرارهای زائد در کد تست می‌شود، بلکه ساختاری منسجم برای تعریف سناریوهای مختلف تست، به همراه ورودی و خروجی‌های مورد انتظار، فراهم می‌سازد.&lt;/p>
&lt;p>در این الگو، مجموعه‌ای از تست‌ها به‌صورت یک جدول از structها تعریف می‌شود که شامل نام تست، ورودی‌ها، خروجی مورد انتظار، و گاهی انتظار وقوع خطا است. سپس با استفاده از یک حلقه و تابع &lt;code>t.Run&lt;/code>، هر ردیف از جدول به‌صورت یک تست مستقل (subtest) اجرا می‌شود. این طراحی باعث می‌شود اضافه‌کردن یک تست جدید، تنها با افزودن یک struct به جدول امکان‌پذیر باشد—بدون نیاز به کپی‌کردن منطق کلی تست.&lt;/p></description></item><item><author/><title>7.4 تست یکپارچه (Integration Test)</title><link>https://book.gofarsi.ir/chapter-7/go-integration-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-integration-testing/</guid><description>&lt;p>تست‌های یکپارچه نوعی از تست نرم‌افزار هستند که به بررسی تعامل صحیح میان اجزای مختلف سیستم می‌پردازند. برخلاف &lt;span class="tooltip" data-tooltip="تست‌های واحد" ontouchend="toggleTooltip(this)">Unit Tests&lt;/span>
که یک بخش از کد را به‌صورت ایزوله بررسی می‌کنند، این تست‌ها بر اطمینان از عملکرد هماهنگ چند ماژول، لایه یا سرویس در کنار هم تمرکز دارند. هدف اصلی آن‌ها شبیه‌سازی سناریوهای نزدیک به شرایط واقعی و اطمینان از این است که بخش‌های سیستم در کنار یکدیگر همان‌طور که انتظار می‌رود کار می‌کنند.&lt;/p></description></item><item><author/><title>7.5 تست انتها به انتها (End-to-End Test - E2E)</title><link>https://book.gofarsi.ir/chapter-7/go-end-to-end-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-end-to-end-tests/</guid><description/></item><item><author/><title>7.6 تست عملکرد (Benchmark)</title><link>https://book.gofarsi.ir/chapter-7/go-benchmarking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-benchmarking/</guid><description/></item><item><author/><title>7.7 تست فازی (Fuzz Testing)</title><link>https://book.gofarsi.ir/chapter-7/go-fuzz-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-fuzz-testing/</guid><description/></item><item><author/><title>7.8 ماک و شبیه‌سازی وابستگی‌ها (Mock)</title><link>https://book.gofarsi.ir/chapter-7/go-mocking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-mocking/</guid><description/></item><item><author/><title>7.9 استفاده از testify</title><link>https://book.gofarsi.ir/chapter-7/go-testify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-testify/</guid><description/></item><item><author/><title>7.10 استفاده از ginkgo</title><link>https://book.gofarsi.ir/chapter-7/go-ginkgo-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-ginkgo-testing/</guid><description/></item><item><author/><title>7.11 تست‌های همزمانی (Concurrent Testing)</title><link>https://book.gofarsi.ir/chapter-7/go-concurrent-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-concurrent-testing/</guid><description/></item><item><author/><title>7.12 سنجش پوشش تست (Code Coverage)</title><link>https://book.gofarsi.ir/chapter-7/go-code-coverage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-code-coverage/</guid><description/></item><item><author/><title>7.13 تست Suite و ساختاردهی تست‌ها</title><link>https://book.gofarsi.ir/chapter-7/go-test-suites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-test-suites/</guid><description/></item><item><author/><title>7.14 تست‌نویسی حرفه‌ای در پروژه</title><link>https://book.gofarsi.ir/chapter-7/go-production-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://book.gofarsi.ir/chapter-7/go-production-testing/</guid><description/></item></channel></rss>